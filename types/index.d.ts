declare function identityOverload(value: string): string;
declare function identityOverload(value: number): number;
declare function identityOverload(value: boolean): boolean;
declare function identityOverload(value: number[]): number[];
declare function identityOverload(value: string[]): string[];
declare function identityOverload(value: object): object;
declare const s: object;
declare function identity<T>(value: T): T;
type User = {
    id: number;
    name: string;
};
declare let user: User;
declare const s1 = "hello";
declare const s2 = 123;
declare const s3: User;
declare function getArray<T>(a: T, b: T): T[];
declare const as: string[];
declare function myNumberFilter(arr: number[], callback: (item: number, index?: number) => boolean): number[];
declare const filterArr: number[];
declare function filter<T>(arr: T[], callback: (item: T, index?: number) => boolean): T[];
declare const filterArr2: number[];
declare const filterArr3: string[];
